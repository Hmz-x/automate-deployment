name: trivy multi-dockerfile scan
on:
  ["push", "workflow_dispatch"]

jobs:
  build-and-scan:
    name: Build and Scan Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Find and build Dockerfiles
        id: build_dockerfiles
        run: |
          # Find all Dockerfiles and store the paths in a file
          find "$PWD" -name Dockerfile > dockerfiles.txt

          # DEBUG
          echo "cat dockerfiles.txt"
          cat dockerfiles.txt 

          # Read the file and build each Dockerfile
          while IFS= read -r dockerfile; do
            # Set a directory name-based tag for the image:
            dir_name="$(dirname "$dockerfile" | cut -d '/' -f 6- | tr ':./' '-' | 
              sed 's/^-//' | tr '[:upper:]' '[:lower:]')"
            image_tag="${dir_name}:latest"
            
            # DEBUG 
            echo "dir_name: $dir_name - image_tag: $image_tag"

            # Build the Docker image
            echo docker build -t "$image_tag" -f "$dockerfile" .
            docker build -t "$image_tag" -f "$dockerfile" .

            # Add the image tag to a file for later use
            echo "$image_tag" >> image_tags.txt
          done < dockerfiles.txt

      - name: trivy-image-scan
        run: |
          # Get total line count for image_tags.txt
          line_count=$(wc -l < image_tags.txt)

          # Initialize a counter variable
          i=1

          # Loop over each image tag and scan it with Trivy
          while IFS= read -r image_tag; do
            echo "Scanning Docker image $image_tag - ${i}/${line_count}"

            # Run Trivy scan
            dir_name="$(echo "$image_tag" | cut -d ':' -f 1)" 
            echo trivy image --ignore-unfixed --format table --severity CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN --output "trivy-image-scan-v1-${dir_name}.table" "$image_tag"
            trivy image --ignore-unfixed --format table --severity CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN --output "trivy-image-scan-v1-${dir_name}.table" "$image_tag"

            # Increment the counter
            i=$((i + 1))
          done < image_tags.txt

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy-image-scan-v1
          path: '*.table'
